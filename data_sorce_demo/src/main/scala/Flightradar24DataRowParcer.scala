object Flightradar24DataRowParcer {
  //  input ,"1de85770":["4CA621",46.3482,-1.8333,224,37000,415,"2125","T-LFBH1","B738","EI-DWT",1537276192,"EIN","AGA","FR3846",0,0,"RYR3846",0,"RYR"]
  def parse(row: String): FlightRadarRecord = {
    val regex = ",\"(\\w*)\":\\[\"(\\w*)\",([-.\\d]*),([-.\\d]*),(\\d*),(\\d*),(\\d*),\"(\\d*)\",\"([\\w-]*)\",\"(\\w*)\",\"([\\w-]*)\".(\\d*),\"(\\w*)\",\"(\\w*)\",\"(\\w*)\",(\\d*),([-\\d]*),\"(\\w*)\",(\\d*),\"(\\w*)\"]".r
    row match {
      case regex(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20) => FlightRadarRecord(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20)
      case _ =>
        println("failed data " + row); null
    }
  }
}
